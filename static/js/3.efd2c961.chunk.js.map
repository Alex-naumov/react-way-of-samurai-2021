{"version":3,"sources":["components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/MyPosts/Post/post.module.css","components/profile/MyPosts/Post/post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/ProfileInfo/Status/status.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","avatar","src","message","likeCount","maxLength60","maxLength","ReduxFormPost","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","postsElements","postsData","map","post","formData","text","console","log","newPost","addPost","posts","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","action","addPostActionCreator","onPostChange","onPostChangeActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","headerImg","photos","large","getStatus","Preload","Profile","getSatus","ProfileContainer","userId","this","match","params","getUserProfile","React","Component","compose","auth","setUserProfile","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.efd2c961.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"ProfileInfo_headerImg__Tocxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__H8Rxh\",\"avatar\":\"post_avatar__3Vn8a\"};","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        className={s.avatar}\r\n        src=\"http://psand.ru/wp-content/uploads/2016/04/Kak-ustanovit-svoy-unikalnyiy-avatar-dlya-vseh-saytov-na-WordPress.png\"\r\n      ></img>\r\n      {props.message}\r\n      <div>\r\n        <span>{props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../utils/formControls\";\r\nimport { maxLength, required } from \"../../utils/validator/validatorForm\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/post\";\r\nconst maxLength60 = maxLength(60);\r\nconst PostForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field\r\n            placeholder={\"newPost\"}\r\n            name={\"newPost\"}\r\n            component={Textarea}\r\n            validate={[required, maxLength60]}\r\n          />\r\n        </div>\r\n        <button>Add post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReduxFormPost = reduxForm({ form: \"post\" })(PostForm);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.postsData.map((post) => {\r\n    return <Post message={post.message} likeCount={post.likeCount} />;\r\n  });\r\n  let newPostElement = React.createRef();\r\n  let addPost = (text) => {\r\n    props.addPost(text);\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.onPostChange(text);\r\n  };\r\n\r\n  let onSubmit = (formData) => {\r\n    console.log(formData);\r\n    addPost(formData.newPost);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      My posts\r\n      <ReduxFormPost onSubmit={onSubmit} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreator,\r\n  onPostChangeActionCreator,\r\n} from \"../../../redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet MapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      let action = addPostActionCreator;\r\n      dispatch(action(text));\r\n    },\r\n    onPostChange: (text) => {\r\n      let action = onPostChangeActionCreator;\r\n      dispatch(action(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(MapStateToProps, MapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { updateStatus } from \"../../../../redux/ProfileReducer\";\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  let activeEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  let diactiveteEditMode = () => {\r\n    setEditMode(false);\r\n\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  let onChangeStatus = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activeEditMode}>{props.status || \"------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onChangeStatus}\r\n            onBlur={diactiveteEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/* class ProfileStatusFFF extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activeEditMode() {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  }\r\n\r\n  diactiveteEditMode() {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  }\r\n\r\n  onChangeStatus = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activeEditMode.bind(this)}>\r\n              {this.props.status || \"------\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              onChange={this.onChangeStatus}\r\n              onBlur={this.diactiveteEditMode.bind(this)}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n} */\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport Preload from \"../../Preload/Preload\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./Status/status\";\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preload />;\r\n  } else {\r\n    return (\r\n      <di>\r\n        <div>\r\n          <img\r\n            className={s.headerImg}\r\n            src=\"https://st.depositphotos.com/1006076/3995/i/600/depositphotos_39951147-stock-photo-spring-landscape-watercolor-flowering-trees.jpg\"\r\n          ></img>\r\n        </div>\r\n        <div>\r\n          <img src={props.profile.photos.large}></img>\r\n          <ProfileStatus\r\n            status={props.status}\r\n            getStatus={props.getStatus}\r\n            updateStatus={props.updateStatus}\r\n          />\r\n        </div>\r\n      </di>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        getSatus={props.getStatus}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./profile\";\r\nimport {\r\n  setUserProfile,\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/ProfileReducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.userId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        getStatus={this.props.getStatus}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}