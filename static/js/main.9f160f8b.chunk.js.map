{"version":3,"sources":["assets/images/avatarDefault.svg","api/api.js","redux/DialogsReducer.js","redux/UsersReducer.js","components/navbar/navbar.module.css","redux/AuthReducer.js","components/header/header.jsx","components/header/headerContainer.jsx","components/Login/login.jsx","components/Login/loginContainer.jsx","components/navbar/navbar.jsx","components/Users/paginator.jsx","components/Users/User/user.jsx","components/Users/users.jsx","redux/UsersSelectors.js","components/Users/usersContainer.jsx","hoc/withSuspence.jsx","redux/AppReducer.js","App.js","redux/redux-store.js","index.js","assets/images/Preload2.svg","components/Preload/Preload.jsx","components/Users/users.module.css","components/utils/formControls.jsx","components/utils/validator/validatorForm.js","redux/ProfileReducer.js","hoc/withAuthRedirect.jsx"],"names":["instance","axios","baseURL","withCredentials","headers","usersApi","getUsers","pageNumber","pageSize","get","then","response","data","unfollow","id","delete","follow","post","profileApi","getUserProfile","userId","getStatus","updateStatus","status","put","uploadPhoto","photoFile","formData","FormData","append","saveProfile","profile","authApi","auth","login","email","password","rememberMe","captcha","logout","getCaptcha","ADD_MESSAGE","UPDATE_NEW_MESSAGE","addMessageActionCreator","text","type","message","onMessageChangeActionCreator","newMessage","initialState","dialogsData","name","messagesData","newMessageText","dialogsReducer","state","action","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_COUNT","IS_FETCHING","FOLLOWING_PROGRES","followSuccess","UserId","unfollowSuccess","setUsers","Users","users","setCurrentPage","setUsersCount","totalUsersCount","toggleIsFetching","isFetching","toggleFollowingProgres","currentPage","followingProgres","requestUsers","dispatch","a","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","UsersReducer","map","user","followed","filter","module","exports","SET_AUTH","CAPTCHA_URL","setAuth","isAuth","captchaUrl","authMe","getCaptchaUrl","url","AuthReducer","Header","props","className","s","header","onClick","to","HeaderContainer","this","React","Component","connect","maxLength15","maxLength","ReduxFormLogin","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","src","error","messages","length","stopSubmit","_error","console","log","Login","Navbar","nav","item","exact","activeClassName","active","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","RightPortionPageNumber","containerPaginator","p","itemPaginator","activePage","onPageChange","User","photos","small","avatarDefault","avatar","disabled","some","fullName","location","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingProgres","UsersContainer","Preload","compose","withAuthRedirect","withSuspence","fallback","SET_INITIALIZED","initialize","AppReducer","ProfileContainer","lazy","DialogsContainer","App","setInitialized","path","render","withRouter","app","promise","Promise","all","reducers","combineReducers","profilePage","ProfileReducer","dialogsPage","DialogsReducer","formReducer","store","createStore","applyMiddleware","thunkMiddleware","rerenderEntireTree","ReactDOM","document","getElementById","getState","subscribe","preload","FormControl","Element","input","meta","touched","Textarea","values","ADD_POST","UPDATE_NEW_POST","SET_USER_PROFILE","GET_STATUS","UPDATE_SATUS","UPLOAD_PHOTO_SUCCESE","addPostActionCreator","onPostChangeActionCreator","newText","setUserProfile","updateStatusAC","postsData","likeCount","newPostText","uploadPhotoProfile","resaultCode","reject","profileReducer","mapStateToProps","RedirectComponent"],"mappings":"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","file":"static/js/main.9f160f8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatarDefault.f4ffe3b6.svg\";","import * as axios from \"axios\";\r\nimport { follow } from \"../redux/UsersReducer\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"8cf8f26c-dd8e-43bd-b601-e02c11073370\",\r\n  },\r\n});\r\n\r\nexport const usersApi = {\r\n  getUsers(pageNumber, pageSize) {\r\n    return instance\r\n      .get(`/users?page=${pageNumber}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n\r\n  unfollow(id) {\r\n    return instance.delete(`/follow/${id}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  follow(id) {\r\n    return instance.post(`/follow/${id}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n\r\nexport const profileApi = {\r\n  getUserProfile(userId) {\r\n    return instance.get(`/profile/` + userId).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(\"/profile/status/\" + userId).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(\"/profile/status\", { status }).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  uploadPhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n    return instance\r\n      .put(\"/profile/photo\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(\"/profile\", profile).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n\r\nexport const authApi = {\r\n  auth() {\r\n    return instance.get(\"/auth/me\").then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return instance\r\n      .post(\"/auth/login\", { email, password, rememberMe, captcha })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  logout() {\r\n    return instance.delete(\"/auth/login\").then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  getCaptcha() {\r\n    return instance.get(\"/security/get-captcha-url\").then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\r\n\r\nexport const addMessageActionCreator = (text) => {\r\n  return {\r\n    type: ADD_MESSAGE,\r\n    message: text,\r\n  };\r\n};\r\n\r\nexport const onMessageChangeActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_NEW_MESSAGE,\r\n    newMessage: text,\r\n  };\r\n};\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n    { name: \"German\", id: 1 },\r\n    { name: \"German\", id: 2 },\r\n    { name: \"German\", id: 6 },\r\n    { name: \"German\", id: 3 },\r\n    { name: \"German\", id: 4 },\r\n  ],\r\n  messagesData: [\r\n    { message: \"How are you\", id: 1 },\r\n    { message: \"Poka\", id: 2 },\r\n    { message: \"yo\", id: 6 },\r\n    { message: \"YO\", id: 3 },\r\n    { message: \"YOU\", id: 4 },\r\n  ],\r\n  newMessageText: \"\",\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        messagesData: [\r\n          ...state.messagesData,\r\n          {\r\n            message: action.message,\r\n            id: 5,\r\n          },\r\n        ],\r\n        newMessageText: [...state.newMessageText],\r\n        newMessageText: \"\",\r\n      };\r\n    }\r\n    case UPDATE_NEW_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData],\r\n        newMessageText: [...state.newMessageText],\r\n        newMessageText: action.newMessage,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dialogsReducer;\r\n","import { usersApi } from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_USERS_COUNT = \"SET-USERS-COUNT\";\r\nconst IS_FETCHING = \"IS-FETCHING\";\r\nconst FOLLOWING_PROGRES = \"FOLLOWING-PROGRES\";\r\n\r\nexport const followSuccess = (UserId) => ({\r\n  type: FOLLOW,\r\n  userId: UserId,\r\n});\r\n\r\nexport const unfollowSuccess = (UserId) => ({\r\n  type: UNFOLLOW,\r\n  userId: UserId,\r\n});\r\nexport const setUsers = (Users) => ({\r\n  type: SET_USERS,\r\n  users: Users,\r\n});\r\nexport const setCurrentPage = (pageNumber) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  pageNumber,\r\n});\r\nexport const setUsersCount = (totalUsersCount) => ({\r\n  type: SET_USERS_COUNT,\r\n  totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: IS_FETCHING,\r\n  isFetching,\r\n});\r\n\r\nexport const toggleFollowingProgres = (isFetching, userId) => ({\r\n  type: FOLLOWING_PROGRES,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nlet initialState = {\r\n  users: [\r\n    /* {\r\n      id: 1,\r\n      followed: false,\r\n      photoUrl:\r\n        \"http://psand.ru/wp-content/uploads/2016/04/Kak-ustanovit-svoy-unikalnyiy-avatar-dlya-vseh-saytov-na-WordPress.png\",\r\n      fullName: \"Andrey\",\r\n      status: \"i learning React.js\",\r\n      location: { city: \"Chaplynks\", country: \"Ukraine\" },\r\n    },\r\n    {\r\n      id: 2,\r\n      followed: true,\r\n      photoUrl:\r\n        \"http://psand.ru/wp-content/uploads/2016/04/Kak-ustanovit-svoy-unikalnyiy-avatar-dlya-vseh-saytov-na-WordPress.png\",\r\n      fullName: \"Lexys\",\r\n      status: \"i learning React.js\",\r\n      location: { city: \"kyiv\", country: \"Ukraine\" },\r\n    },\r\n    {\r\n      id: 3,\r\n      followed: false,\r\n      photoUrl:\r\n        \"http://psand.ru/wp-content/uploads/2016/04/Kak-ustanovit-svoy-unikalnyiy-avatar-dlya-vseh-saytov-na-WordPress.png\",\r\n      fullName: \"Maximus\",\r\n      status: \"i learning React.js\",\r\n      location: { city: \"Kherson\", country: \"Ukraine\" },\r\n    }, */\r\n  ],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingProgres: [],\r\n};\r\nconst UsersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.userId) {\r\n            return { ...user, followed: true };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    }\r\n\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.userId) {\r\n            return { ...user, followed: false };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    }\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.pageNumber,\r\n      };\r\n    case SET_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    case IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case FOLLOWING_PROGRES:\r\n      return {\r\n        ...state,\r\n        followingProgres: action.isFetching\r\n          ? [...state.followingProgres, action.userId]\r\n          : state.followingProgres.filter((id) => id != action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  const data = await usersApi.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setUsersCount(data.totalCount));\r\n};\r\n\r\nexport const followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingProgres(true, userId));\r\n  const data = await apiMethod(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgres(false, userId));\r\n};\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.follow, followSuccess);\r\n    /* dispatch(toggleFollowingProgres(true, userId));\r\n    let data = await usersApi.follow(userId);\r\n    if (data.resultCode === 0) {\r\n      dispatch(followSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgres(false, userId)); */\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.unfollow, unfollowSuccess);\r\n    /* dispatch(toggleFollowingProgres(true, userId));\r\n    usersApi.unfollow(userId).then((data) => {\r\n      if (data.resultCode === 0) {\r\n        dispatch(unfollowSuccess(userId));\r\n      }\r\n      dispatch(toggleFollowingProgres(false, userId));\r\n    }); */\r\n  };\r\n};\r\n\r\nexport default UsersReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"navbar_item__3c9vB\",\"active\":\"navbar_active__2QpoM\"};","import { stopSubmit } from \"redux-form\";\r\nimport { authApi, usersApi } from \"../api/api\";\r\n\r\nconst SET_AUTH = \"SET-AUTH\";\r\nconst CAPTCHA_URL = \"CAPTCHA-URL\";\r\n\r\nexport const setAuth = (userId, email, login, isAuth) => ({\r\n  type: SET_AUTH,\r\n  data: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const setCaptchaUrl = (captchaUrl) => ({\r\n  type: CAPTCHA_URL,\r\n  captchaUrl,\r\n});\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH: {\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n    }\r\n    case CAPTCHA_URL: {\r\n      return { ...state, captchaUrl: action.captchaUrl };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n  const data = await authApi.auth();\r\n  if (data.resultCode === 0) {\r\n    let { id, email, login } = data.data;\r\n    dispatch(setAuth(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (\r\n  dispatch\r\n) => {\r\n  const data = await authApi.login(email, password, rememberMe, captcha);\r\n  if (data.resultCode === 0) {\r\n    dispatch(authMe());\r\n  } else if (data.resultCode === 10) {\r\n    dispatch(getCaptchaUrl());\r\n  } else {\r\n    let message = data.messages.length > 0 ? data.messages[0] : \"error\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  const data = await authApi.logout();\r\n  if (data.resultCode == 0) {\r\n    dispatch(setAuth(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n  const data = await authApi.getCaptcha();\r\n\r\n  dispatch(setCaptchaUrl(data.url));\r\n};\r\n\r\nexport default AuthReducer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./header.module.css\";\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.auth}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login}\r\n            <button onClick={props.logout}>Log Out</button>{\" \"}\r\n          </div>\r\n        ) : (\r\n          <NavLink to=\"/login\">login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/AuthReducer\";\r\nimport Header from \"./header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  /* componentDidMount() {\r\n    this.props.auth();\r\n  } */\r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getCaptchaUrl, login } from \"../../redux/AuthReducer\";\r\nimport { Input } from \"../utils/formControls\";\r\nimport { maxLength, required } from \"../utils/validator/validatorForm\";\r\n\r\nconst maxLength15 = maxLength(40);\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"login\"}\r\n          component={Input}\r\n          name={\"email\"}\r\n          type={\"Email\"}\r\n          validate={[required, maxLength15]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          placeholder={\"password\"}\r\n          component={Input}\r\n          name={\"password\"}\r\n          type={\"password\"}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={Input} name={\"rememberMe\"} type={\"Checkbox\"} />\r\n        Remember me\r\n      </div>\r\n      {props.captchaUrl && (\r\n        <div>\r\n          <img src={props.captchaUrl} />\r\n          <div>\r\n            <Field\r\n              placeholder={\"Symbols\"}\r\n              component={Input}\r\n              name={\"captchaUrl\"}\r\n              validate={[required]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {props.error && <div>{props.error}</div>}\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxFormLogin = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  let onSubmit = (formData) => {\r\n    console.log(formData);\r\n    props.login(\r\n      formData.email,\r\n      formData.password,\r\n      formData.rememberMe,\r\n      formData.captchaUrl\r\n    );\r\n  };\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <ReduxFormLogin onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authMe } from \"../../redux/AuthReducer\";\r\nimport Login from \"./login\";\r\n\r\nlet mapStateToProps = (state) => {};\r\n\r\nexport default connect(mapStateToProps, { authMe })(Login);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./navbar.module.css\";\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink exact to=\"/profile\" activeClassName={s.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink exact to=\"/dialogs\" activeClassName={s.active}>\r\n          Message\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink exact to=\"/users\" activeClassName={s.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Music</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Settings</a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./users.module.css\";\r\n\r\nconst Paginator = (props) => {\r\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  debugger;\r\n  let portionSize = 10;\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let RightPortionPageNumber = portionNumber * portionSize;\r\n  console.log(leftPortionPageNumber);\r\n  return (\r\n    <div className={s.containerPaginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= RightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <div className={s.itemPaginator}>\r\n              <span\r\n                className={props.currentPage === p && s.activePage}\r\n                onClick={() => {\r\n                  props.onPageChange(p);\r\n                }}\r\n              >\r\n                {p}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { usersApi } from \"../../../api/api\";\r\nimport avatarDefault from \"../../../assets/images/avatarDefault.svg\";\r\nimport s from \"../users.module.css\";\r\n\r\nclass User extends React.Component {\r\n  render() {\r\n    return (\r\n      <div key={this.props.id}>\r\n        <span>\r\n          <NavLink to={\"/profile/\" + this.props.id}>\r\n            <img\r\n              src={\r\n                this.props.photos.small != null\r\n                  ? this.props.photos.small\r\n                  : avatarDefault\r\n              }\r\n              className={s.avatar}\r\n            />\r\n          </NavLink>\r\n          <div>\r\n            {this.props.followed ? (\r\n              <button\r\n                disabled={this.props.followingProgres.some(\r\n                  (id) => id === this.props.id\r\n                )}\r\n                onClick={() => {\r\n                  /* debugger; */\r\n                  this.props.unfollow(this.props.id);\r\n                }}\r\n              >\r\n                unfollow\r\n              </button>\r\n            ) : (\r\n              <button\r\n                disabled={this.props.followingProgres.some(\r\n                  (id) => id === this.props.id\r\n                )}\r\n                onClick={() => {\r\n                  this.props.follow(this.props.id);\r\n                }}\r\n              >\r\n                follow\r\n              </button>\r\n            )}\r\n          </div>\r\n        </span>\r\n        <span>\r\n          <div>{this.props.fullName}</div>\r\n          <div>{this.props.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{\"props.location.country\"}</div>\r\n          <div>{\"props.location.city\"}</div>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"./paginator\";\r\nimport User from \"./User/user\";\r\n\r\nconst Users = (props) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={props.currentPage}\r\n        onPageChange={props.onPageChange}\r\n        totalItemsCount={props.totalUsersCount}\r\n        pageSize={props.pageSize}\r\n      />\r\n      {props.users.map((user) => {\r\n        return (\r\n          <User\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            followed={user.followed}\r\n            fullName={user.name}\r\n            status={user.status}\r\n            id={user.id}\r\n            location={user.location}\r\n            photos={user.photos}\r\n            followingProgres={props.followingProgres}\r\n            toggleFollowingProgres={props.toggleFollowingProgres}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingProgres = (state) => {\r\n  return state.usersPage.followingProgres;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  setUsers,\r\n  setUsersCount,\r\n  toggleIsFetching,\r\n  unfollow,\r\n  toggleFollowingProgres,\r\n  requestUsers,\r\n} from \"../../redux/UsersReducer\";\r\nimport Users from \"./users\";\r\nimport Preload from \"../Preload/Preload\";\r\nimport { usersApi } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingProgres,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n  getIsFetching,\r\n} from \"../../redux/UsersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n  onPageChange = (pageNumber) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.requestUsers(pageNumber, this.props.pageSize);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preload /> : null}\r\n        <Users\r\n          onPageChange={this.onPageChange}\r\n          users={this.props.users}\r\n          currentPage={this.props.currentPage}\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          toggleFollowingProgres={this.props.toggleFollowingProgres}\r\n          followingProgres={this.props.followingProgres}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingProgres: getFollowingProgres(state),\r\n  };\r\n};\r\n\r\n/* let mapDispatchToProps = (dispatch) => {\r\n  return;\r\n}; */\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setUsersCount,\r\n    toggleIsFetching,\r\n    toggleFollowingProgres,\r\n    requestUsers,\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer);\r\n","import React, { Suspense } from \"react\";\r\nimport Preload from \"../components/Preload/Preload\";\r\n\r\nexport const withSuspence = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <Suspense fallback={<Preload />}>\r\n        <Component {...props} />\r\n      </Suspense>\r\n    );\r\n  };\r\n};\r\n","import { authMe } from \"./AuthReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET-INITIALIZED\";\r\n\r\nexport const setInitializedAC = () => ({\r\n  type: SET_INITIALIZED,\r\n});\r\n\r\nlet initialState = {\r\n  initialize: false,\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED: {\r\n      return {\r\n        ...state,\r\n        initialize: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setInitialized = () => (dispatch) => {\r\n  let promise = dispatch(authMe());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(setInitializedAC());\r\n  });\r\n};\r\n\r\nexport default AppReducer;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, withRouter } from \"react-router\";\nimport { compose } from \"redux\";\nimport \"./App.css\";\nimport HeaderContainer from \"./components/header/headerContainer\";\n\nimport LoginContainer from \"./components/Login/loginContainer\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Preload from \"./components/Preload/Preload\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport { withSuspence } from \"./hoc/withSuspence\";\nimport { setInitialized } from \"./redux/AppReducer\";\nconst ProfileContainer = React.lazy(() =>\n  import(\"./components/profile/profileContainer\")\n);\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.setInitialized();\n  }\n\n  render() {\n    if (!this.props.initialize) {\n      return <Preload />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route\n            path=\"/profile/:userId?\"\n            render={withSuspence(ProfileContainer)}\n          />\n          <Route path=\"/dialogs\" render={withSuspence(DialogsContainer)} />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <LoginContainer />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  initialize: state.app.initialize,\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { setInitialized })\n)(App);\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport DialogsReducer from \"./DialogsReducer\";\r\nimport ProfileReducer from \"./ProfileReducer\";\r\nimport UsersReducer from \"./UsersReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport AppReducer from \"./AppReducer\";\r\nlet reducers = combineReducers({\r\n  profilePage: ProfileReducer,\r\n  dialogsPage: DialogsReducer,\r\n  usersPage: UsersReducer,\r\n  auth: AuthReducer,\r\n  form: formReducer,\r\n  app: AppReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport store from \"./redux/redux-store\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nconst rerenderEntireTree = (state) => {\n  ReactDOM.render(\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>,\n    document.getElementById(\"root\")\n  );\n};\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n  rerenderEntireTree(store.getState());\n});\n","export default __webpack_public_path__ + \"static/media/Preload2.cf389ff6.svg\";","import React from \"react\";\r\nimport preload from \"../../assets/images/Preload2.svg\";\r\n\r\nconst Preload = () => {\r\n  return (\r\n    <div>\r\n      <img src={preload}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preload;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"users_activePage__3hnKL\",\"itemPaginator\":\"users_itemPaginator__2E7hB\",\"containerPaginator\":\"users_containerPaginator__3cQfU\",\"avatar\":\"users_avatar__16dSE\"};","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const FormControl = (Element) => ({ input, meta, ...props }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Element {...input} {...props} />;\r\n      </div>\r\n\r\n      {meta.touched && meta.error && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = FormControl(\"textarea\");\r\nexport const Input = FormControl(\"input\");\r\n\r\nexport const createField = ({\r\n  placeholder,\r\n  component,\r\n  name,\r\n\r\n  validate,\r\n  props = {},\r\n}) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      component={component}\r\n      name={name}\r\n      validate={validate}\r\n      {...props}\r\n    />\r\n  </div>\r\n);\r\n","export const required = (values) => {\r\n  if (values) {\r\n    return undefined;\r\n  }\r\n\r\n  return \"errorField\";\r\n};\r\n\r\nexport const maxLength = (length) => (values) => {\r\n  if (values.length > length) {\r\n    return `error max length - ${length}`;\r\n  }\r\n\r\n  return undefined;\r\n};\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { profileApi, usersApi } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST = \"UPDATE-NEW-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst GET_STATUS = \"GET-STATUS\";\r\nconst UPDATE_SATUS = \"UPDATE-SATUS\";\r\nconst UPLOAD_PHOTO_SUCCESE = \"UPLOAD-PHOTO-SUCCESE\";\r\n\r\nexport const addPostActionCreator = (text) => {\r\n  return {\r\n    type: ADD_POST,\r\n    message: text,\r\n  };\r\n};\r\n\r\nexport const onPostChangeActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_NEW_POST,\r\n    newText: text,\r\n  };\r\n};\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\nexport const getStatusAC = (status) => ({\r\n  type: GET_STATUS,\r\n  status,\r\n});\r\n\r\nexport const updateStatusAC = (status) => ({\r\n  type: UPDATE_SATUS,\r\n  status,\r\n});\r\nexport const uploadPhotoSuccese = (photos) => ({\r\n  type: UPLOAD_PHOTO_SUCCESE,\r\n  photos,\r\n});\r\n\r\nlet initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"My first props\", likeCount: 20 },\r\n    { id: 1, message: \"My first post\", likeCount: 15 },\r\n  ],\r\n  newPostText: \"It kamasutra\",\r\n  profile: null,\r\n  status: null,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        postsData: [\r\n          ...state.postsData,\r\n          {\r\n            id: 5,\r\n            message: action.message,\r\n            likeCount: 0,\r\n          },\r\n        ],\r\n        newPostText: [...state.newPostText],\r\n        newPostText: \"\",\r\n      };\r\n    }\r\n    case UPDATE_NEW_POST: {\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData],\r\n        newPostText: [...state.newPostText],\r\n        newPostText: action.newText,\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    }\r\n    case GET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case UPDATE_SATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case UPLOAD_PHOTO_SUCCESE: {\r\n      return {\r\n        ...state,\r\n        profile: [...state.profile],\r\n        photos: action.photos,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  const data = await profileApi.getStatus(userId);\r\n  dispatch(getStatusAC(data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  const data = await profileApi.updateStatus(status);\r\n  if (data.resultCode === 0) {\r\n    dispatch(updateStatusAC(status));\r\n  }\r\n};\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const data = await profileApi.getUserProfile(userId);\r\n  dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const uploadPhotoProfile = (photoFile) => async (dispatch) => {\r\n  const data = await profileApi.uploadPhoto(photoFile);\r\n  if (data.resaultCode === 0) {\r\n    dispatch(uploadPhotoProfile(data.data.photos));\r\n  }\r\n};\r\n\r\nexport const saveProfile = (profile, userId) => async (dispatch) => {\r\n  const data = await profileApi.saveProfile(profile);\r\n\r\n  if (data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    dispatch(stopSubmit(\"profileInfoData\", { _error: data.messages[0] }));\r\n    return Promise.reject(data.messages[0]);\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n"],"sourceRoot":""}