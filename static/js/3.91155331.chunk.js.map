{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/MyPosts/Post/post.module.css","components/profile/MyPosts/Post/post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/ProfileInfo/Status/status.jsx","components/profile/ProfileInfo/ProfileFormData.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","Post","className","s","item","avatar","src","message","likeCount","maxLength60","maxLength","ReduxFormPost","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","postsElements","postsData","map","post","formData","text","console","log","newPost","addPost","posts","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","action","addPostActionCreator","onPostChange","onPostChangeActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","profile","error","Input","type","Object","keys","contacts","key","contactsItem","ProfileData","onClick","SetEditMode","fullName","aboutMe","lookingForAJobDescription","lookingForAJob","ProfileInfo","headerImg","photos","large","avatarDefault","isOwner","target","files","length","uploadPhotoProfile","saveProfile","userId","then","initialValues","getStatus","Preload","Profile","getSatus","ProfileContainer","match","params","getUserProfile","refreshProfile","compose","auth","setUserProfile","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.91155331.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"ProfileInfo_headerImg__Tocxj\",\"avatar\":\"ProfileInfo_avatar__13Otl\",\"contactsItem\":\"ProfileInfo_contactsItem__3v16m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__H8Rxh\",\"avatar\":\"post_avatar__3Vn8a\"};","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        className={s.avatar}\r\n        src=\"http://psand.ru/wp-content/uploads/2016/04/Kak-ustanovit-svoy-unikalnyiy-avatar-dlya-vseh-saytov-na-WordPress.png\"\r\n      ></img>\r\n      {props.message}\r\n      <div>\r\n        <span>{props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../utils/formControls\";\r\nimport { maxLength, required } from \"../../utils/validator/validatorForm\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/post\";\r\nconst maxLength60 = maxLength(60);\r\nconst PostForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field\r\n            placeholder={\"newPost\"}\r\n            name={\"newPost\"}\r\n            component={Textarea}\r\n            validate={[required, maxLength60]}\r\n          />\r\n        </div>\r\n        <button>Add post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReduxFormPost = reduxForm({ form: \"post\" })(PostForm);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.postsData.map((post) => {\r\n    return <Post message={post.message} likeCount={post.likeCount} />;\r\n  });\r\n  let newPostElement = React.createRef();\r\n  let addPost = (text) => {\r\n    props.addPost(text);\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.onPostChange(text);\r\n  };\r\n\r\n  let onSubmit = (formData) => {\r\n    console.log(formData);\r\n    addPost(formData.newPost);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      My posts\r\n      <ReduxFormPost onSubmit={onSubmit} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreator,\r\n  onPostChangeActionCreator,\r\n} from \"../../../redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet MapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      let action = addPostActionCreator;\r\n      dispatch(action(text));\r\n    },\r\n    onPostChange: (text) => {\r\n      let action = onPostChangeActionCreator;\r\n      dispatch(action(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(MapStateToProps, MapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { updateStatus } from \"../../../../redux/ProfileReducer\";\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  let activeEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  let diactiveteEditMode = () => {\r\n    setEditMode(false);\r\n\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  let onChangeStatus = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activeEditMode}>\r\n            <b>Status :</b>\r\n            {props.status || \"------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onChangeStatus}\r\n            onBlur={diactiveteEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/* class ProfileStatusFFF extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activeEditMode() {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  }\r\n\r\n  diactiveteEditMode() {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  }\r\n\r\n  onChangeStatus = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activeEditMode.bind(this)}>\r\n              {this.props.status || \"------\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              onChange={this.onChangeStatus}\r\n              onBlur={this.diactiveteEditMode.bind(this)}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n} */\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport { Field, Form, reduxForm } from \"redux-form\";\r\nimport { Input } from \"../../utils/formControls\";\r\nimport { required } from \"../../utils/validator/validatorForm\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileFormData = ({ profile, ...props }) => {\r\n  return (\r\n    <Form onSubmit={props.handleSubmit}>\r\n      <button>Save</button>\r\n      {props.error && <div>{props.error}</div>}\r\n      <div>\r\n        <b>Full Name: </b>\r\n        <Field placeholder={\"Full Name\"} name={\"fullName\"} component={Input} />\r\n      </div>\r\n      <div>\r\n        <b>About me: </b>\r\n        <Field placeholder={\"About Me\"} name={\"aboutMe\"} component={Input} />\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job description: </b>\r\n        <Field\r\n          placeholder={\"lookingForAJobDescription\"}\r\n          name={\"lookingForAJobDescription\"}\r\n          component={Input}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>lookingForAJob :</b>\r\n        <Field name={\"lookingForAJob\"} type={\"Checkbox\"} component={Input} />\r\n      </div>\r\n      <div>\r\n        <b>Contacts :</b>\r\n        <div>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <div className={s.contactsItem}>\r\n                <b>{key}:</b>\r\n                <Field\r\n                  placeholder={\"http://\"}\r\n                  name={\"contacts.\" + key}\r\n                  component={Input}\r\n                  value={profile.contacts[key]}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"profileInfoData\" })(ProfileFormData);\r\n","import React, { useState } from \"react\";\r\nimport Preload from \"../../Preload/Preload\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./Status/status\";\r\nimport avatarDefault from \"../../../assets/images/avatarDefault.svg\";\r\nimport ProfileFormData from \"./ProfileFormData\";\r\nconst ProfileInfo = (props) => {\r\n  let onUploadPhoto = (e) => {\r\n    if (e.target.files.length) {\r\n      props.uploadPhotoProfile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  let onSaveProfileForm = (formData) => {\r\n    console.log(formData);\r\n    props.saveProfile(formData, props.userId).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  if (!props.profile) {\r\n    return <Preload />;\r\n  } else {\r\n    return (\r\n      <di>\r\n        <div>\r\n          <img\r\n            className={s.headerImg}\r\n            src=\"https://st.depositphotos.com/1006076/3995/i/600/depositphotos_39951147-stock-photo-spring-landscape-watercolor-flowering-trees.jpg\"\r\n          ></img>\r\n        </div>\r\n        <div>\r\n          <img\r\n            src={props.profile.photos.large || avatarDefault}\r\n            className={s.avatar}\r\n          ></img>\r\n          {props.isOwner && <input type={\"file\"} onChange={onUploadPhoto} />}\r\n          {editMode ? (\r\n            <ProfileFormData\r\n              profile={props.profile}\r\n              onSubmit={onSaveProfileForm}\r\n              initialValues={props.profile}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              profile={props.profile}\r\n              SetEditMode={() => setEditMode(true)}\r\n            />\r\n          )}\r\n\r\n          <ProfileStatus\r\n            status={props.status}\r\n            getStatus={props.getStatus}\r\n            updateStatus={props.updateStatus}\r\n          />\r\n        </div>\r\n      </di>\r\n    );\r\n  }\r\n};\r\n\r\nconst ProfileData = ({ profile, ...props }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={props.SetEditMode}>Edit</button>\r\n      <div>\r\n        <b>Full Name: </b>\r\n        {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>About me: </b>\r\n        {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job description: </b>\r\n        {profile.lookingForAJobDescription}\r\n      </div>\r\n      <div>\r\n        <b>lookingForAJob :</b>\r\n        {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      <div>\r\n        <b>Contacts :</b>\r\n        <div>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <div className={s.contactsItem}>\r\n                <b>{key}:</b>\r\n                {profile.contacts[key]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        userId={props.userId}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        getSatus={props.getStatus}\r\n        updateStatus={props.updateStatus}\r\n        uploadPhotoProfile={props.uploadPhotoProfile}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./profile\";\r\nimport {\r\n  setUserProfile,\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  uploadPhotoProfile,\r\n  saveProfile,\r\n} from \"../../redux/ProfileReducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.userId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        userId={this.props.userId}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        getStatus={this.props.getStatus}\r\n        updateStatus={this.props.updateStatus}\r\n        uploadPhotoProfile={this.props.uploadPhotoProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    uploadPhotoProfile,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}